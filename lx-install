#!/usr/bin/env php
<?php
/**
 * Добавляет в корень проекта папку 'lx' - сердце платформы в проекте
 * Папка будет содержать:
 * 1. Каталог 'config' - настройки платформы, необходимые в рамках этого приложения
 * 2. Файл 'lx' - для запуска встроенной в платформу CLI командой: php lx cli
 * 3. Каталог .system - необходим платформе для работы, изменять там что-либо нежелательно
 * */

// fcgi doesn't have STDIN and STDOUT defined by default
defined('STDIN') or define('STDIN', fopen('php://stdin', 'r'));
defined('STDOUT') or define('STDOUT', fopen('php://stdout', 'w'));

require_once(__DIR__ . '/src/php/app.php');

lx::installInitialisation();

$site = new lx\Directory(lx::$conductor->site);

// Создаем в корне папку services
$lx = $site->getOrMakeDirectory('services');

// Создаем в корне папку lx
$lx = $site->getOrMakeDirectory('lx');
$system = $lx->getOrMakeDirectory('.system');

// Создаем файл для работы в консольном режиме
require(__DIR__ . '/install-src/lxConsole.php');
/**
 * @var $lxConsoleCode
 * */
$lxConsole = $lx->makeFile('lx');
$lxConsole->put($lxConsoleCode . 'lx::runConsole($argv);');

// Если конфигов еще нет - создадим
if (!$lx->contain('config')) {
	$config = $lx->makeDirectory('config');

	require(__DIR__ . '/install-src/configTpl.php');
	/**
	 * @var $configMainCode
	 * @var $configRoutesCode
	 * @var $configModuleCode
	 * @var $configServiceCode
	 * */

	$configMain = $config->makeFile('main.php');
	$configMain->put($configMainCode);

	$configRoutes = $config->makeFile('routes.php');
	$configRoutes->put($configRoutesCode);

	$configModule = $config->makeFile('module.php');
	$configModule->put($configModuleCode);

	$configService = $config->makeFile('service.php');
	$configService->put($configServiceCode);
}

$data = $lx->getOrMakeDirectory('data');
if (!$data->contain('languages.php')) {
	$languages = $data->makeFile('languages.php');
	$languages->put(require(__DIR__ . '/install-src/data/languages.php'));
}

// Если нет HelloWorld-ного сервиса - создадим
if (!lx\Service::exists('lx/lx-hello')) {
	$site->getOrMakeDirectory('vendor');

	$service = (new lx\ServiceEditor())->createService('lx/lx-hello', '@site/vendor');
	$moduleEditor = new lx\ModuleEditor($service);
	$module = $moduleEditor->createModule('world', 'module');

	$dir = $module->directory;
	$i18n = $dir->makeFile('i18n.yaml');
	$i18n->put(file_get_contents(__DIR__ . '/install-src/hiModule/i18nTpl'));
	$view = $dir->get('view/_root.php');
	$view->put(file_get_contents(__DIR__ . '/install-src/hiModule/viewTpl'));
	$view = $dir->get('frontend/_main.js');
	$view->put(file_get_contents(__DIR__ . '/install-src/hiModule/frontendTpl'));
	$view = $dir->get('backend/Respondent.php');
	$view->put(file_get_contents(__DIR__ . '/install-src/hiModule/backendTpl'));
}

// Строим карту автозагрузки
(new lx\AutoloadMapBuilder())->createCommonAutoloadMap();

// Закончили упражнение
lx\Console::outln('Done');
